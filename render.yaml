# Render.com Blueprint for LibreChat
# This blueprint defines the infrastructure needed to deploy LibreChat on Render.com

services:
  # Main LibreChat Application
  - type: web
    name: librechat
    runtime: docker
    plan: standard
    dockerfilePath: ./Dockerfile.semantic-fabric
    dockerContext: .
    healthCheckPath: /api/health
    envVars:
      - key: PORT
        value: 3080
      - key: HOST
        value: 0.0.0.0
      - key: MONGO_URI
        value: mongodb://mongodb:27017/LibreChat?directConnection=true
      - key: MEILI_HOST
        value: http://meilisearch:7700
      - key: MEILI_MASTER_KEY
        generateValue: true
      - key: RAG_PORT
        value: 8000
      - key: RAG_API_URL
        value: http://rag-api:8000
      - key: NODE_ENV
        value: production
      - key: UID
        value: 1000
      - key: GID
        value: 1000
      - key: JWT_SECRET
        generateValue: true
      - key: CREDS_KEY
        generateValue: true
      - key: CREDS_IV
        generateValue: true
      - key: OPENAI_API_KEY
        sync: false
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: GROQ_API_KEY
        sync: false
      - key: MISTRAL_API_KEY
        sync: false
      - key: OPENROUTER_KEY
        sync: false
      - key: PORTKEY_API_KEY
        sync: false
      - key: PORTKEY_OPENAI_VIRTUAL_KEY
        sync: false
    disk:
      name: librechat-data
      mountPath: /app/uploads
      sizeGB: 10

  # RAG API Service
  - type: pserv
    name: rag-api
    runtime: image
    plan: standard
    image:
      url: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    envVars:
      - key: DB_HOST
        value: vectordb
      - key: DB_PORT
        value: 5432
      - key: DB_USER
        value: postgres
      - key: DB_PASSWORD
        generateValue: true
      - key: DB_NAME
        value: librechatvectordb
      - key: RAG_PORT
        value: 8000
      - key: OPENAI_API_KEY
        sync: false
      - key: VECTOR_DB_TYPE
        value: pgvector

  # MongoDB for main storage (as a service)
  - type: pserv
    name: mongodb
    runtime: image
    plan: standard
    image:
      url: mongo:latest
    disk:
      name: mongo-data
      mountPath: /data/db
      sizeGB: 10
    envVars:
      - key: MONGO_INITDB_ROOT_USERNAME
        value: librechatuser
      - key: MONGO_INITDB_ROOT_PASSWORD
        generateValue: true

  # MeiliSearch for search functionality (as a service)
  - type: pserv
    name: meilisearch
    runtime: image
    plan: standard
    image:
      url: getmeili/meilisearch:v1.12.3
    disk:
      name: meili-data
      mountPath: /meili_data
      sizeGB: 10
    envVars:
      - key: MEILI_NO_ANALYTICS
        value: "true"
      - key: MEILI_MASTER_KEY
        generateValue: true

  # PostgreSQL with pgvector for vector storage
  - type: pserv
    name: vectordb
    runtime: image
    plan: standard
    image:
      url: ankane/pgvector:latest
    disk:
      name: pg-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 10
    envVars:
      - key: POSTGRES_USER
        value: postgres
      - key: POSTGRES_PASSWORD
        generateValue: true
      - key: POSTGRES_DB
        value: librechatvectordb